//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module RNG(

	//////////// CLOCK //////////
	input 		          		clock,


	//////////// output bit //////////
	output		     word_out

);



//=======================================================
//  REG/WIRE declarations
//=======================================================
parameter N=16;
wire [N:0] net /*synthesis keep*/;
reg [3:0] trig;
genvar i;
reg rng_bit;
assign word_out = rng_bit;


assign net[0] = ~(net[N-1] ^ net[0] ^ net[1]);
assign net[N-1] = (net[N-2] ^ net[N-1] ^ net[0]);
//=======================================================
//  Structural coding
//=======================================================

generate
	for (i=1; i<N-1; i=i+1)
	begin: generate_ring
		assign net[i] = (net[i-1] ^ net[i] ^ net[i+1]);
	end
endgenerate


always @ (negedge clock)
begin
	trig[0] = net[0];
	trig[1] = net[4];
	trig[2] = net[8];
	trig[3] = net[12];
end

always @ (posedge clock)
begin
	rng_bit = trig[0] ^ trig[1] ^ trig[2] ^ trig[3];
end


endmodule
